#ifndef __TFT_TOUCH_H
#define __TFT_TOUCH_H	
#include "stdint.h"
#include "board.h"
struct tp_pix_
{
	uint16_t x;
	uint16_t y;
};
//读X,Y坐标命令
#define  CMD_RDX  0xD0	 
#define  CMD_RDY  0x90
//画笔颜色
#define WHITE         	 0xFFFF
#define BLACK         	 0x0000	  
#define BLUE         	 0x001F  
#define BRED             0XF81F
#define GRED 			 0XFFE0
#define GBLUE			 0X07FF
#define RED           	 0xF800
#define MAGENTA       	 0xF81F
#define GREEN         	 0x07E0
#define CYAN          	 0x7FFF
#define YELLOW        	 0xFFE0
#define BROWN 			 0XBC40 //棕色
#define BRRED 			 0XFC07 //棕红色
#define GRAY  			 0X8430 //灰色

//GUI颜色
#define DARKBLUE      	 0X01CF	//深蓝色
#define LIGHTBLUE      	 0X7D7C	//浅蓝色
#define GRAYBLUE       	 0X5458 //灰蓝色
//以上三色为PANEL的颜色
 
#define LIGHTGREEN     	 0X841F //浅绿色
#define LGRAY 		 0XC618 //浅灰色(PANNEL),窗体背景色
#define LGRAYBLUE        0XA651 //浅灰蓝色（中间层颜色）
#define LBBLUE           0X2B12 //浅棕蓝色(选择条目的反色)

void CS_GPIOInit(void);
void CS_GPIOclose(void);
void CS_GPIOSet(PIN_Id pin, uint8_t flag);

void CS1_GPIOInit(void);
void CS1_GPIOclose(void);
void CS1_GPIOSet(PIN_Id pin, uint8_t flag);

void TFT_delay(uint32_t times);
static inline void TFT_SetRes();
static inline void TFT_ClearRes();
void LCD_WR_DATA8(uint8_t TFT_txbuff);
void LCD_WR_REG(uint8_t TFT_txbuff1);
void TFT_Init(void);
void TFT_Init_GX(void); //1028
void LCD_ShowMixString(uint16_t x,uint16_t y,uint8_t *text);

void fontchange(uint8_t *, uint8_t *);
void Address_set(uint16_t x1,uint16_t y1,uint16_t x2,uint16_t y2);
void TFT_Clear(uint16_t Color);
void LCD_Fill(uint16_t xsta,uint16_t ysta,uint16_t xend,uint16_t yend,uint16_t color);
void LCD_WR_DATA16(uint16_t TFT_txbuff2);
void LCD_ShowChar(uint16_t x,uint16_t y,uint8_t num,uint8_t mode);
void LCD_DrawPoint(uint16_t x,uint16_t y);
void LCD_ShowString(uint16_t x,uint16_t y,uint8_t *p);
void showhanzi16(uint16_t x,uint16_t y,uint8_t index);	
//以下为触摸屏
void touch_WR_DATA8(uint8_t touch_txbuff);
uint16_t touch_Read_12bit() ;
uint16_t ADS_Read_AD(uint8_t CMD);
uint16_t ADS_Read_XY(uint8_t xy);
uint8_t Read_ADS(uint16_t *x,uint16_t *y);
uint8_t Read_ADS2(uint16_t *x,uint16_t *y);
uint8_t Read_TP_Once(void);
#endif 
